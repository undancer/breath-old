buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.0'
    }
}

allprojects {
//
    group = 'com.github.undancer'
    version = '1.0-SNAPSHOT'
//
//    // apply plugin: 'scala'
    apply plugin: 'maven'
////    apply plugin: 'eclipse'
    apply plugin: 'idea'
//    apply plugin: 'tomcat'
//    apply plugin: 'jetty'

    ext.groovyVersion = '2.1.8'
    ext.springVersion = '3.2.4.RELEASE'
    ext.metricsVersion = '3.0.1'
    ext.tomcatVersion = '7.0.42'
    ext.junitVersion = '4.11'
    ext.slf4jVersion = '1.7.5'

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.maven.apache.org/maven2" }
        maven { url "http://maven.oschina.net/content/groups/public" }
//        maven { url "https://repository.apache.org/content/repositories/releases" }  // tomcat 8 RC3

    }
//
    task whereami << { println "$projectDir" }
//
}
//
subprojects {

    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'scala'

    compileJava {
        sourceCompatibility = 1.7
        targetCompatibility = 1.7
    }

    dependencies {

        compile "org.codehaus.groovy:groovy-all:$groovyVersion"

        ['slf4j-api', 'jcl-over-slf4j', 'log4j-over-slf4j'].each {
            compile "org.slf4j:$it:$slf4jVersion"
        }
        compile('ch.qos.logback:logback-classic:1.0.+')

        testCompile("junit:junit:$junitVersion")

        compile 'com.google.guava:guava:15.0'


    }
}

project(':breath-core') {
    dependencies {
        [
                "org.apache.tomcat:tomcat-servlet-api:$tomcatVersion",
                "org.apache.tomcat:tomcat-jsp-api:$tomcatVersion"
        ].each {
            compile it
        }

        compile 'javax.inject:javax.inject:1'

        compile(group: 'org.springframework', name: 'spring-context-support', version: "$springVersion") {
            exclude(group: 'commons-logging', module: 'commons-logging')
        }
        compile(group: 'org.springframework', name: 'spring-webmvc', version: "$springVersion") {
            exclude(group: 'commons-logging', module: 'commons-logging')
        }

//        compile 'org.datanucleus:datanucleus-accessplatform-jdo-excel:3.3.2'
//        compile 'org.apache.poi:poi-ooxml:3.+'

//        ['metrics-core', 'metrics-servlet'].each {
//            compile "com.codahale.metrics:$it:3.+"
//        }
        compile(group: 'com.codahale.metrics', name: 'metrics-core', version: '3.+')
//        compile(group: 'com.codahale.metrics', name: 'metrics-logback', version: '3.+')
//        compile(group: 'com.codahale.metrics', name: 'metrics-jersey', version: '3.+')
//        compile(group: 'com.codahale.metrics', name: 'metrics-json', version: '3.+')
        compile(group: 'com.codahale.metrics', name: 'metrics-servlet', version: '3.+')
//        compile(group: 'com.codahale.metrics', name: 'metrics-healthchecks', version: '3.+')
//        compile(group: 'com.codahale.metrics', name: 'metrics-graphite', version: '3.+')

    }
}

project(':breath-webapp') {

    apply plugin: 'war'
    apply plugin: 'tomcat'

    dependencies {
        providedCompile(
                'javax.servlet:javax.servlet-api:3.1.0',
                'javax.servlet.jsp:javax.servlet.jsp-api:2.2.1'
        )
        compile project(':breath-core')

        compile(group: 'org.glassfish.jersey.ext', name: 'jersey-spring3', version: '2.3.1') {
            exclude(group: 'commons-logging', module: 'commons-logging')
//            exclude(group: 'org.glassfish.hk2')
            exclude(group: 'junit', module: 'junit')
        }

        ['oauth1-signature', 'oauth1-client', 'oauth1-server', 'oauth2-client'].each {
            compile "org.glassfish.jersey.security:$it:2.3.1"
        }

        compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.2.3'

//        compile 'org.glassfish.jersey.core:jersey-server:2.3'

//        compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.2.3'
//        compile

        ['tomcat-embed-core', 'tomcat-embed-logging-juli', 'tomcat-embed-jasper'].each {
            tomcat("org.apache.tomcat.embed:$it:$tomcatVersion") {
                exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
            }
        }

    }
}